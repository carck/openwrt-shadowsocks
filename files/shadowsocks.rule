#!/bin/sh

usage() {
	cat <<-EOF
		Usage: ss-rules [options]

		Valid options are:

		    -s <server_host>        hostname or ip of shadowsocks remote server
		    -l <local_port>         port number of shadowsocks local server
		    -i <ip_list_file>       a file content is bypassed ip list
		    -a <lan_ips>            lan ip of access control, need a prefix to
		                            define access control mode
		    -b <wan_ips>            wan ip of will be bypassed
		    -w <wan_ips>            wan ip of will be forwarded
		    -e <extra_options>      extra options for iptables
		    -o                      apply the rules to the OUTPUT chain
		    -u                      enable udprelay mode, TPROXY is required
		    -U                      enable udprelay mode, using different IP
		                            and ports for TCP and UDP
		    -f                      flush the rules
EOF
}

loger() {
	# 1.alert 2.crit 3.err 4.warn 5.notice 6.info 7.debug
	logger -st ss-rules[$$] -p$1 $2
}

ipt_n="iptables -t nat"

flush_r() {
	local IPT

	IPT=$(iptables-save -t nat)
	eval $(echo "$IPT" | grep "_SS_SPEC_RULE_" | \
		sed -e 's/^-A/$ipt_n -D/' -e 's/$/;/')

	for chain in $(echo "$IPT" | awk '/^:SS_SPEC/{print $1}'); do
		$ipt_n -F ${chain:1} 2>/dev/null && \
		$ipt_n -D zone_lan_prerouting -j ${chain:1} && \
		$ipt_n -X ${chain:1}
	done

	ipset -X ss_spec_wan_ac 2>/dev/null
	return 0
}

ipset_r() {
	ipset -! -R <<-EOF || return 1
		create ss_spec_wan_ac hash:net
		$(for ip in $WAN_FW_IP; do echo "add ss_spec_wan_ac $ip"; done)
EOF
	$ipt_n -N SS_SPEC_WAN_AC && \
	$ipt_n -I zone_lan_prerouting -j SS_SPEC_WAN_AC && \
	$ipt_n -A SS_SPEC_WAN_AC -m set --match-set ss_spec_wan_ac dst -p tcp -j REDIRECT --to-ports $local_port
	return $?
}


while getopts ":s:l:S:L:i:e:a:b:w:ouUf" arg; do
	case $arg in
		s)
			server=$OPTARG
			;;
		l)
			local_port=$OPTARG
			;;
		S)
			SERVER=$OPTARG
			;;
		L)
			LOCAL_PORT=$OPTARG
			;;
		i)
			IGNORE=$OPTARG
			;;
		e)
			EXT_ARGS=$OPTARG
			;;
		a)
			LAN_AC_IP=$OPTARG
			;;
		b)
			WAN_BP_IP=$(for ip in $OPTARG; do echo $ip; done)
			;;
		w)
			WAN_FW_IP=$OPTARG
			;;
		o)
			OUTPUT=1
			;;
		u)
			TPROXY=1
			;;
		U)
			TPROXY=2
			;;
		f)
			flush_r
			exit 0
			;;
	esac
done

if [ -z "$server" -o -z "$local_port" ]; then
	usage
	exit 2
fi

if [ "$TPROXY" = 1 ]; then
	SERVER=$server
	LOCAL_PORT=$local_port
fi

if [ "$TPROXY" = 2 ]; then
	if [ -z "$SERVER" -o -z "$LOCAL_PORT" ]; then
		loger 3 "Please use -S and -L specifies IP and port for UDP."
	fi
fi

if [ -f "$IGNORE" ]; then
	IGNORE_IP=$(cat $IGNORE 2>/dev/null)
fi

flush_r && ipset_r

exit $?
